{"version":3,"sources":["logo.svg","assets/images/telegram.svg","assets/images/instagram.svg","assets/images/index.js","components/Icon.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","telegramIcon","require","instagramIcon","Icon","name","className","src","Images","alt","App","logo","href","target","rel","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gGAAAA,EAAOC,QAAU,IAA0B,kC,yFCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,+FCA5B,G,MAAA,CACbC,aAAcC,EAAQ,IACtBC,cAAeD,EAAQ,MCOVE,EANF,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACX,4BAAQC,UAAU,QAChB,yBAAKC,IAAKC,EAAO,GAAD,OAAIH,EAAJ,SAAiBI,IAAKJ,MCsF3BK,MArFf,WACE,OACE,yBAAKJ,UAAU,OACb,4BAAQA,UAAU,cAChB,yBAAKC,IAAKI,IAAML,UAAU,WAAWG,IAAI,SACzC,0DACA,2FAEF,2BAAOH,UAAU,eACf,4BACE,qCACS,IACP,gCACE,uBACEM,KAAK,6BACLC,OAAO,SACPC,IAAI,uBAHN,wBAHJ,MAYE,uBACEF,KAAK,yBACLC,OAAO,SACPC,IAAI,uBAHN,YAZF,KAqBA,oCACQ,IACN,2DAFF,KAIA,gDACc,IACZ,gCACE,uBACEF,KAAK,yBACLC,OAAO,SACPC,IAAI,uBAHN,2BAHJ,wBAcF,sGAIA,6DAC+B,IAC7B,uBACEF,KAAK,sGACLC,OAAO,SACPC,IAAI,uBAHN,kBAMK,IARP,oDAYF,4BAAQR,UAAU,cAChB,uBACEM,KAAK,+CACLC,OAAO,SACPC,IAAI,uBAEJ,kBAAC,EAAD,CAAMT,KAAK,cAEb,uBACEO,KAAK,mCACLC,OAAO,SACPC,IAAI,uBAEJ,kBAAC,EAAD,CAAMT,KAAK,kBCxEDU,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.1a74dc60.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","module.exports = __webpack_public_path__ + \"static/media/telegram.a734c8fd.svg\";","module.exports = __webpack_public_path__ + \"static/media/instagram.1662de7a.svg\";","export default {\n  telegramIcon: require('./telegram.svg'),\n  instagramIcon: require('./instagram.svg'),\n}\n","import React from 'react';\nimport Images from './../assets/images';\n\nconst Icon = ({ name }) => (\n  <figure className=\"icon\">\n    <img src={Images[`${name}Icon`]} alt={name} />\n  </figure>\n);\n\nexport default Icon;\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport Icon from './components/Icon';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h2>1° Meetup - React Natal</h2>\n        <h5>Introdução à comunidade e ao ReactJS + mini-curso</h5>\n      </header>\n      <aside className=\"App-content\">\n        <ul>\n          <li>\n            Local:{\" \"}\n            <strong>\n              <a\n                href=\"http://jerimumhacker.space\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Jerimum Hackerspace\n              </a>\n            </strong>\n            . (\n            <a\n              href=\"https://bit.ly/2n1zps0\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Ver mapa\n            </a>\n            )\n          </li>\n          <li>\n            Data:{\" \"}\n            <strong>26/10 das 14h às 18h</strong>.\n          </li>\n          <li>\n            Inscrições:{\" \"}\n            <strong>\n              <a\n                href=\"https://bit.ly/2oBRgqe\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                https://bit.ly/2oBRgqe\n              </a>\n            </strong>\n            . (Vagas limitadas)\n          </li>\n        </ul>\n        <p>\n          * Por favor, se possivel trazer notebook para participar do mini\n          curso.\n        </p>\n        <p>\n          ** É novo por aqui? Preencha{\" \"}\n          <a\n            href=\"https://docs.google.com/forms/d/e/1FAIpQLSfoa7A91QVldfTJJz7o6chDN4MxMADtjLuSJ5TlipqI6swL4A/viewform\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            nossa pesquisa\n          </a>{\" \"}\n          para conhecermos melhor o perfil da comunidade.\n        </p>\n      </aside>\n      <footer className=\"App-footer\">\n        <a\n          href=\"https://t.me/joinchat/H1k6RhYZPseq9vZ1W8A5Eg\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Icon name=\"telegram\" />\n        </a>\n        <a\n          href=\"https://instagram.com/reactnatal\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Icon name=\"instagram\" />\n        </a>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}